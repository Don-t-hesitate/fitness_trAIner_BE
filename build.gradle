plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "com.github.node-gradle.node" version "3.5.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springModulithVersion', "1.1.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.security:spring-security-crypto:6.2.1'

    //docker
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    //mariadb
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

//구버전 jwt
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

// react 앱 설치를 위한 npm 태스크 추가
node {
    version = "18.17.1" //사용하고자 하는 노드 버전
    download = true
}

// npmInstall 태스크 사용
task installReactDeps(type: NpmTask) {
    workingDir = file("${projectDir}/react-app")
    args = ["install", "--legacy-peer-deps"]
}

// buildReact 태스크에 installReactDeps 의존성 추가
task buildReact(type: NpmTask, dependsOn: 'installReactDeps') {
    workingDir = file("${projectDir}/react-app")
    args = ["run", "build"]
}